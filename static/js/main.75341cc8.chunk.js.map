{"version":3,"sources":["components/Profile/Profile.styled.jsx","components/Profile/Profile.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","utils/randomColor.js","components/FriendList/FriendList.styled.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.styled.jsx","components/TransactionHistory/TransactionHistory.jsx","App.jsx","index.js"],"names":["ProfileCard","styled","div","Description","Avatar","img","UserName","p","Location","Tag","Stats","ul","StatItem","li","Lebel","span","Quantity","Profile","name","tag","location","avatar","likes","followers","views","src","alt","StatisticsSection","section","SectionTitle","h2","StatList","Label","Percentage","Statistics","title","stats","map","id","label","percentage","rndColor","Math","floor","random","toString","style","backgroundColor","List","Item","Status","status","FriendName","FriendList","friends","isOnline","adr","width","Tabele","table","ColumnName","th","TransInfo","td","TableBody","tr","TrasactionHistory","transactions","type","amount","currency","App","user","statData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75341cc8.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ProfileCard = styled.div`\n  margin: 20px auto;\n  width: 250px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  box-shadow: 2px 2px 5px #000000;\n  margin-bottom: 30px;\n`;\nexport const Description = styled.div`\n  padding: 10px 0;\n  width: 150px;\n  margin: auto;\n  text-align: center;\n  font-size: 16px;\n`;\n\nexport const Avatar = styled.img`\n  height: 100px;\n  border-radius: 50%;\n`;\nexport const UserName = styled.p`\n  color: #122236;\n  font-size: 18px;\n  font-weight: 700;\n`;\nexport const Location = styled.p`\n  color: #82909e;\n`;\n\nexport const Tag = styled.p`\n  color: #82909e;\n`;\n\nexport const Stats = styled.ul`\n  display: flex;\n  width: 100%;\n`;\n\nexport const StatItem = styled.li`\n  width: 100px;\n  text-align: center;\n  padding: 15px 0;\n  border: 1px solid #e4e9f0;\n  background-color: #f3f6f9;\n  &:first-of-type {\n    border-radius: 0 0 0 5px;\n  }\n  &:last-child {\n    border-radius: 0 0 5px 0;\n  }\n`;\n\nexport const Lebel = styled.span`\n  display: block;\n  font-size: 14px;\n  color: #768696;\n  margin-bottom: 10px;\n`;\n\nexport const Quantity = styled.span`\n  font-weight: 700;\n  display: block;\n`;\n","import PropTypes from \"prop-types\";\nimport {\n  Avatar,\n  Description,\n  Lebel,\n  Location,\n  ProfileCard,\n  Quantity,\n  StatItem,\n  Stats,\n  Tag,\n  UserName,\n} from \"./Profile.styled\";\nexport const Profile = ({\n  name,\n  tag,\n  location,\n  avatar,\n  likes,\n  followers,\n  views,\n}) => {\n  return (\n    <ProfileCard>\n      <Description>\n        <Avatar src={avatar} alt=\"Аватар пользователя\" />\n        <UserName>{name}</UserName>\n        <Tag>@{tag}</Tag>\n        <Location>{location}</Location>\n      </Description>\n\n      <Stats>\n        <StatItem>\n          <Lebel>Followers</Lebel>\n          <Quantity>{followers}</Quantity>\n        </StatItem>\n        <StatItem>\n          <Lebel>Views</Lebel>\n          <Quantity>{views}</Quantity>\n        </StatItem>\n        <StatItem>\n          <Lebel>Likes</Lebel>\n          <Quantity>{likes}</Quantity>\n        </StatItem>\n      </Stats>\n    </ProfileCard>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  likes: PropTypes.number.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const StatisticsSection = styled.section`\n  margin: 20px auto;\n  width: 350px;\n  background-color: #ffffff;\n  box-shadow: 2px 2px 5px #000000;\n  margin-bottom: 30px;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: grey;\n  font-size: 18px;\n  font-weight: 700;\n  text-align: center;\n  text-transform: uppercase;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const StatList = styled.ul`\n  display: flex;\n  height: 70px;\n`;\n\nexport const StatItem = styled.li`\n  text-align: center;\n  width: 100%;\n  height: 100%;\n`;\nexport const Label = styled.span`\n  display: block;\n  padding-top: 15px;\n  font-size: 12px;\n  color: rgb(221, 208, 208);\n`;\n\nexport const Percentage = styled.span`\n  display: block;\n  font-size: 16px;\n  padding-top: 5px;\n  font-weight: 900;\n  color: rgb(221, 208, 208);\n`;\n","import PropTypes from \"prop-types\";\nimport {\n  Label,\n  Percentage,\n  SectionTitle,\n  StatItem,\n  StatList,\n  StatisticsSection,\n} from \"./Statistics.styled\";\nimport { randomColor } from \"../../utils/randomColor\";\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <StatisticsSection>\n      {title && <SectionTitle>{title}</SectionTitle>}\n      <StatList>\n        {stats.map(({ id, label, percentage }) => {\n          const rndColor = randomColor();\n          return (\n            <StatItem key={id} style={{ backgroundColor: `#${rndColor}` }}>\n              <Label>{label}</Label>\n              <Percentage>{percentage}%</Percentage>\n            </StatItem>\n          );\n        })}\n      </StatList>\n    </StatisticsSection>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n","export const randomColor = () => {\n  return Math.floor(Math.random() * 16777215).toString(16);\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  margin: 20px auto;\n  width: 200px;\n  margin-bottom: 30px;\n`;\nexport const Item = styled.li`\n  box-shadow: 2px 2px 5px #000000;\n  display: flex;\n  margin-bottom: 10px;\n  align-items: center;\n`;\nexport const Status = styled.span`\n  background-color: ${({ status }) => {\n    switch (status) {\n      case true:\n        return \"green\";\n      case false:\n        return \"red\";\n      default:\n        return \"black\";\n    }\n  }};\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  margin-right: 10px;\n  margin-left: 10px;\n`;\nexport const Avatar = styled.img`\n  padding: 5px;\n`;\nexport const FriendName = styled.p`\n  color: gray;\n`;\n","import PropTypes from \"prop-types\";\nimport { List, Item, Status, Avatar, FriendName } from \"./FriendList.styled\";\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <List>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <Item key={id}>\n          <Status status={isOnline}></Status>\n          <Avatar adr=\"lox\" src={avatar} alt=\"\" width=\"48\"></Avatar>\n          <FriendName>{name}</FriendName>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from \"@emotion/styled\";\n\nexport const Tabele = styled.table`\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n  border: none;\n  margin-bottom: 20px;\n`;\n\nexport const ColumnName = styled.th`\n  font-weight: bold;\n  text-align: center;\n  border: none;\n  padding: 10px 15px;\n  background: #d8d8d8;\n  font-size: 14px;\n  &:first-of-type {\n    border-radius: 8px 0 0 8px;\n  }\n  &:last-of-type {\n    border-radius: 0 8px 8px 0;\n  }\n`;\nexport const TransInfo = styled.td`\n  text-align: center;\n  border: none;\n  padding: 10px 15px;\n  font-size: 14px;\n  vertical-align: top;\n  &:first-of-type {\n    border-radius: 8px 0 0 8px;\n  }\n  &:last-of-type {\n    border-radius: 0 8px 8px 0;\n  }\n`;\nexport const TableBody = styled.tr`\n  &:nth-of-type(even) {\n    background: #f3f3f3;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport {\n  ColumnName,\n  Tabele,\n  TableBody,\n  TransInfo,\n} from \"./TransactionHistory.styled\";\nexport const TrasactionHistory = ({ transactions }) => {\n  return (\n    <Tabele>\n      <thead>\n        <tr>\n          <ColumnName>Type</ColumnName>\n          <ColumnName>Amount</ColumnName>\n          <ColumnName>Currency</ColumnName>\n        </tr>\n      </thead>\n\n      <tbody>\n        {transactions.map(({ id, type, amount, currency }) => (\n          <TableBody key={id}>\n            <TransInfo>{type}</TransInfo>\n            <TransInfo>{amount}</TransInfo>\n            <TransInfo>{currency}</TransInfo>\n          </TableBody>\n        ))}\n      </tbody>\n    </Tabele>\n  );\n};\n\nTrasactionHistory.propTypes = {\n  transactions: PropTypes.PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Profile } from \"./components/Profile/Profile\";\nimport user from \"./components/data/profile.json\";\nimport { Statistics } from \"./components/Statistics/Statistics\";\nimport statData from \"./components/data/statistical-data.json\";\nimport { FriendList } from \"./components/FriendList/FriendList\";\nimport friends from \"./components/data/friends.json\";\nimport { TrasactionHistory } from \"./components/TransactionHistory/TransactionHistory\";\nimport transactions from \"./components/data/transaction.json\";\n\nexport const App = () => {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistics stats={statData} title=\"Stats\" />\n      <Statistics stats={statData} />\n      <FriendList friends={friends} />\n      <TrasactionHistory transactions={transactions} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}